# Default values for cloudflare-tunnel.

# Cloudflare parameters.
cloudflare:

  # -------------------------------------------------------------------------------------
  # Recommended behaviour is to set one of existingSecret and existingSecretCred to an externally defined secret
  # (since, assuming use in gitops, it is not good practice to include secrets in a git repo).
  # We opt not to create additional mode selection variables for flexibility.
  #
  # Tunnel token takes precedence over credentials.json, so if both are set.
  #

  # -------------------------------------------------------------------------------------
  # # mode A: tunnel token authentication (easiest and most recent mode)
  # #
  # existingSecret: REPLACE-ME
  # # if set, will mount the named secret as envFrom.
  # # this is used to define credentials via TUNNEL_TOKEN env, for named tunnel from web-ui
  #
  # # ignored if existingSecret is set to true
  # tunnelToken: "" # setting to "" instead of "REPLACE-ME" prevents accidental disabling of credentials.json

  # -------------------------------------------------------------------------------------
  # # mode B: tunnel credentials.json authentication (older mode, but prob easier for automation)
  # #
  # existingSecretCred: REPLACE-ME
  # tunnelName: REQUIRED-FOR-CREDENTIALS-JSON
  # # if set, will mount the named secret as credentials.json
  # # this is used to define credentials for tunnels created from "cloudflare tunnel create"
  #
  # # ignored if existingSecretCred is set to true
  # # tunnelCli:
  # #   AccountTag:
  # #   TunnelID:
  # #   TunnelSecret:

  # -------------------------------------------------------------------------------------
  protocol: auto    # auto, http2, and quic

  # some cloud providers seem to block egress UDP on QUIC... Use http2 instead if needed

  # # Define ingress rules for the tunnel. See
  # # https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/configuration/configuration-file/ingress
  # ingress: []
  #   # The first rule proxies traffic to the httpbin sample service named web-server at port 80
  #   # - hostname: tunnel.example.com
  #   #  service: http://web-service:80
  #   # This rule sends traffic to the built-in hello-world HTTP server. This can help debug connectivity
  #   # issues. If hello.example.com resolves and tunnel.example.com does not, then the problem is
  #   # in the connection from cloudflared to your local service, not from the internet to cloudflared.
  #   # - hostname: hello.example.com
  #   #   service: hello_world

  loglevel:          info     # trace, debug, info, warn, error, fatal, panic
  transportLoglevel: warn     # trace, debug, info, warn, error, fatal, panic

debugContainer:
  enabled: false
  image:   "alpine:latest"

image:
  repository: cloudflare/cloudflared
  pullPolicy: IfNotPresent
  # If supplied, this overrides "appVersion"
  tag: ""

replicaCount: 2

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

# Security items common to everything in the pod.  Here we require that it
# does not run as the user defined in the image, literally named "nonroot".
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 65532

# Security items for one container. We lock it down.
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

# Default affinity is to spread out over nodes; use this to append/override (depending on affinity_keep_podAntiAffinity).
affinity: {}
affinity_keep_podAntiAffinity: true
